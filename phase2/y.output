Terminals unused in grammar

   DIGIT
   LETTER
   EQUAL
   DOT
   SPACE
   NEWLINE
   TABS
   COMMENT
   ERROR2
   ERROR3
   OTHER


State 38 conflicts: 1 shift/reduce
State 48 conflicts: 2 shift/reduce
State 62 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce
State 77 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce
State 79 conflicts: 1 shift/reduce
State 81 conflicts: 1 shift/reduce
State 82 conflicts: 1 shift/reduce
State 83 conflicts: 1 shift/reduce
State 86 conflicts: 1 shift/reduce
State 101 conflicts: 1 shift/reduce
State 113 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: %empty
    2        | Functions

    3 Functions: Function
    4          | Function Functions

    5 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    6 Declarations: %empty
    7             | Declaration SEMICOLON Declarations

    8 Statements: Statement SEMICOLON
    9           | Statement SEMICOLON Statements

   10 Declaration: Identifiers COLON ArrayIndex INTEGER
   11            | Identifiers COLON INTEGER

   12 Identifiers: Ident
   13            | Ident COMMA Identifiers

   14 ArrayIndex: ARRAY L_SQUAREBRACKET NUMBER R_SQUAREBRACKET OF

   15 Statement: Var ASSIGN Expression
   16          | IF BoolExp THEN Statements ENDIF
   17          | IF BoolExp THEN Statements ELSE Statements ENDIF
   18          | WHILE BoolExp BEGINLOOP Statements ENDLOOP
   19          | DO BEGINLOOP Statements ENDLOOP WHILE BoolExp
   20          | READ Vars
   21          | WRITE Vars
   22          | CONTINUE
   23          | RETURN Expression

   24 Vars: Var
   25     | Var COMMA Vars

   26 Var: Ident
   27    | Ident L_SQUAREBRACKET Expression R_SQUAREBRACKET

   28 BoolExp: RelationAndExp BoolExps

   29 BoolExps: %empty
   30         | OR BoolExp

   31 RelationAndExp: RelationExp RelationAndExps

   32 RelationAndExps: %empty
   33                | AND RelationAndExp

   34 RelationExp: NotExist RelationExps

   35 NotExist: %empty
   36         | NOT

   37 RelationExps: Expression Comp Expression
   38             | TRUE
   39             | FALSE
   40             | L_PAREN BoolExp R_PAREN

   41 Comp: EQ
   42     | NEQ
   43     | LT
   44     | GT
   45     | LTE
   46     | GTE

   47 Expression: MultiplicativeExp Expressions

   48 Expressions: %empty
   49            | ADD Expression
   50            | SUB Expression

   51 MultiplicativeExp: Term MultiplicativeExps

   52 MultiplicativeExps: %empty
   53                   | MULT MultiplicativeExp
   54                   | DIV MultiplicativeExp
   55                   | MOD MultiplicativeExp

   56 Term: SubExist Ident
   57     | SubExist Ident L_SQUAREBRACKET Expression R_SQUAREBRACKET
   58     | SubExist NUMBER
   59     | SubExist L_PAREN Expression R_PAREN
   60     | IDENT
   61     | IDENT L_PAREN ExpressionsComma R_PAREN

   62 ExpressionsComma: %empty
   63                 | Expression
   64                 | Expression COMMA Expressions

   65 SubExist: %empty
   66         | SUB

   67 Ident: IDENT


Terminals, with rules where they appear

$end (0) 0
error (256)
DIGIT (258)
LETTER (259)
FUNCTION (260) 5
BEGIN_PARAMS (261) 5
END_PARAMS (262) 5
BEGIN_LOCALS (263) 5
END_LOCALS (264) 5
BEGIN_BODY (265) 5
END_BODY (266) 5
INTEGER (267) 10 11
ARRAY (268) 14
OF (269) 14
IF (270) 16 17
THEN (271) 16 17
ENDIF (272) 16 17
ELSE (273) 17
WHILE (274) 18 19
DO (275) 19
BEGINLOOP (276) 18 19
ENDLOOP (277) 18 19
CONTINUE (278) 22
READ (279) 20
WRITE (280) 21
AND (281) 33
OR (282) 30
NOT (283) 36
TRUE (284) 38
FALSE (285) 39
RETURN (286) 23
SUB (287) 50 66
ADD (288) 49
MULT (289) 53
DIV (290) 54
MOD (291) 55
EQUAL (292)
EQ (293) 41
NEQ (294) 42
LT (295) 43
GT (296) 44
LTE (297) 45
GTE (298) 46
IDENT (299) 60 61 67
NUMBER (300) 14 58
SEMICOLON (301) 5 7 8 9
COLON (302) 10 11
COMMA (303) 13 25 64
L_PAREN (304) 40 59 61
R_PAREN (305) 40 59 61
L_SQUAREBRACKET (306) 14 27 57
R_SQUAREBRACKET (307) 14 27 57
ASSIGN (308) 15
DOT (309)
SPACE (310)
NEWLINE (311)
TABS (312)
COMMENT (313)
ERROR2 (314)
ERROR3 (315)
OTHER (316)


Nonterminals, with rules where they appear

$accept (62)
    on left: 0
Program (63)
    on left: 1 2, on right: 0
Functions (64)
    on left: 3 4, on right: 2 4
Function (65)
    on left: 5, on right: 3 4
Declarations (66)
    on left: 6 7, on right: 5 7
Statements (67)
    on left: 8 9, on right: 5 9 16 17 18 19
Declaration (68)
    on left: 10 11, on right: 7
Identifiers (69)
    on left: 12 13, on right: 10 11 13
ArrayIndex (70)
    on left: 14, on right: 10
Statement (71)
    on left: 15 16 17 18 19 20 21 22 23, on right: 8 9
Vars (72)
    on left: 24 25, on right: 20 21 25
Var (73)
    on left: 26 27, on right: 15 24 25
BoolExp (74)
    on left: 28, on right: 16 17 18 19 30 40
BoolExps (75)
    on left: 29 30, on right: 28
RelationAndExp (76)
    on left: 31, on right: 28 33
RelationAndExps (77)
    on left: 32 33, on right: 31
RelationExp (78)
    on left: 34, on right: 31
NotExist (79)
    on left: 35 36, on right: 34
RelationExps (80)
    on left: 37 38 39 40, on right: 34
Comp (81)
    on left: 41 42 43 44 45 46, on right: 37
Expression (82)
    on left: 47, on right: 15 23 27 37 49 50 57 59 63 64
Expressions (83)
    on left: 48 49 50, on right: 47 64
MultiplicativeExp (84)
    on left: 51, on right: 47 53 54 55
MultiplicativeExps (85)
    on left: 52 53 54 55, on right: 51
Term (86)
    on left: 56 57 58 59 60 61, on right: 51
ExpressionsComma (87)
    on left: 62 63 64, on right: 61
SubExist (88)
    on left: 65 66, on right: 56 57 58 59
Ident (89)
    on left: 67, on right: 5 12 13 26 27 56 57


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (Program)

    Program    go to state 2
    Functions  go to state 3
    Function   go to state 4


State 1

    5 Function: FUNCTION . Ident SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    IDENT  shift, and go to state 5

    Ident  go to state 6


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 7


State 3

    2 Program: Functions .

    $default  reduce using rule 2 (Program)


State 4

    3 Functions: Function .
    4          | Function . Functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (Functions)

    Functions  go to state 8
    Function   go to state 4


State 5

   67 Ident: IDENT .

    $default  reduce using rule 67 (Ident)


State 6

    5 Function: FUNCTION Ident . SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: Program $end .

    $default  accept


State 8

    4 Functions: Function Functions .

    $default  reduce using rule 4 (Functions)


State 9

    5 Function: FUNCTION Ident SEMICOLON . BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    5 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS . Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 6 (Declarations)

    Declarations  go to state 11
    Declaration   go to state 12
    Identifiers   go to state 13
    Ident         go to state 14


State 11

    5 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declarations . END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    7 Declarations: Declaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 16


State 13

   10 Declaration: Identifiers . COLON ArrayIndex INTEGER
   11            | Identifiers . COLON INTEGER

    COLON  shift, and go to state 17


State 14

   12 Identifiers: Ident .
   13            | Ident . COMMA Identifiers

    COMMA  shift, and go to state 18

    $default  reduce using rule 12 (Identifiers)


State 15

    5 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declarations END_PARAMS . BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    7 Declarations: Declaration SEMICOLON . Declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 6 (Declarations)

    Declarations  go to state 20
    Declaration   go to state 12
    Identifiers   go to state 13
    Ident         go to state 14


State 17

   10 Declaration: Identifiers COLON . ArrayIndex INTEGER
   11            | Identifiers COLON . INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22

    ArrayIndex  go to state 23


State 18

   13 Identifiers: Ident COMMA . Identifiers

    IDENT  shift, and go to state 5

    Identifiers  go to state 24
    Ident        go to state 14


State 19

    5 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS . Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 6 (Declarations)

    Declarations  go to state 25
    Declaration   go to state 12
    Identifiers   go to state 13
    Ident         go to state 14


State 20

    7 Declarations: Declaration SEMICOLON Declarations .

    $default  reduce using rule 7 (Declarations)


State 21

   11 Declaration: Identifiers COLON INTEGER .

    $default  reduce using rule 11 (Declaration)


State 22

   14 ArrayIndex: ARRAY . L_SQUAREBRACKET NUMBER R_SQUAREBRACKET OF

    L_SQUAREBRACKET  shift, and go to state 26


State 23

   10 Declaration: Identifiers COLON ArrayIndex . INTEGER

    INTEGER  shift, and go to state 27


State 24

   13 Identifiers: Ident COMMA Identifiers .

    $default  reduce using rule 13 (Identifiers)


State 25

    5 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations . END_LOCALS BEGIN_BODY Statements END_BODY

    END_LOCALS  shift, and go to state 28


State 26

   14 ArrayIndex: ARRAY L_SQUAREBRACKET . NUMBER R_SQUAREBRACKET OF

    NUMBER  shift, and go to state 29


State 27

   10 Declaration: Identifiers COLON ArrayIndex INTEGER .

    $default  reduce using rule 10 (Declaration)


State 28

    5 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS . BEGIN_BODY Statements END_BODY

    BEGIN_BODY  shift, and go to state 30


State 29

   14 ArrayIndex: ARRAY L_SQUAREBRACKET NUMBER . R_SQUAREBRACKET OF

    R_SQUAREBRACKET  shift, and go to state 31


State 30

    5 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY . Statements END_BODY

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 5

    Statements  go to state 39
    Statement   go to state 40
    Var         go to state 41
    Ident       go to state 42


State 31

   14 ArrayIndex: ARRAY L_SQUAREBRACKET NUMBER R_SQUAREBRACKET . OF

    OF  shift, and go to state 43


State 32

   16 Statement: IF . BoolExp THEN Statements ENDIF
   17          | IF . BoolExp THEN Statements ELSE Statements ENDIF

    NOT  shift, and go to state 44

    $default  reduce using rule 35 (NotExist)

    BoolExp         go to state 45
    RelationAndExp  go to state 46
    RelationExp     go to state 47
    NotExist        go to state 48


State 33

   18 Statement: WHILE . BoolExp BEGINLOOP Statements ENDLOOP

    NOT  shift, and go to state 44

    $default  reduce using rule 35 (NotExist)

    BoolExp         go to state 49
    RelationAndExp  go to state 46
    RelationExp     go to state 47
    NotExist        go to state 48


State 34

   19 Statement: DO . BEGINLOOP Statements ENDLOOP WHILE BoolExp

    BEGINLOOP  shift, and go to state 50


State 35

   22 Statement: CONTINUE .

    $default  reduce using rule 22 (Statement)


State 36

   20 Statement: READ . Vars

    IDENT  shift, and go to state 5

    Vars   go to state 51
    Var    go to state 52
    Ident  go to state 42


State 37

   21 Statement: WRITE . Vars

    IDENT  shift, and go to state 5

    Vars   go to state 53
    Var    go to state 52
    Ident  go to state 42


State 38

   23 Statement: RETURN . Expression

    SUB    shift, and go to state 54
    IDENT  shift, and go to state 55

    IDENT     [reduce using rule 65 (SubExist)]
    $default  reduce using rule 65 (SubExist)

    Expression         go to state 56
    MultiplicativeExp  go to state 57
    Term               go to state 58
    SubExist           go to state 59


State 39

    5 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements . END_BODY

    END_BODY  shift, and go to state 60


State 40

    8 Statements: Statement . SEMICOLON
    9           | Statement . SEMICOLON Statements

    SEMICOLON  shift, and go to state 61


State 41

   15 Statement: Var . ASSIGN Expression

    ASSIGN  shift, and go to state 62


State 42

   26 Var: Ident .
   27    | Ident . L_SQUAREBRACKET Expression R_SQUAREBRACKET

    L_SQUAREBRACKET  shift, and go to state 63

    $default  reduce using rule 26 (Var)


State 43

   14 ArrayIndex: ARRAY L_SQUAREBRACKET NUMBER R_SQUAREBRACKET OF .

    $default  reduce using rule 14 (ArrayIndex)


State 44

   36 NotExist: NOT .

    $default  reduce using rule 36 (NotExist)


State 45

   16 Statement: IF BoolExp . THEN Statements ENDIF
   17          | IF BoolExp . THEN Statements ELSE Statements ENDIF

    THEN  shift, and go to state 64


State 46

   28 BoolExp: RelationAndExp . BoolExps

    OR  shift, and go to state 65

    $default  reduce using rule 29 (BoolExps)

    BoolExps  go to state 66


State 47

   31 RelationAndExp: RelationExp . RelationAndExps

    AND  shift, and go to state 67

    $default  reduce using rule 32 (RelationAndExps)

    RelationAndExps  go to state 68


State 48

   34 RelationExp: NotExist . RelationExps

    TRUE     shift, and go to state 69
    FALSE    shift, and go to state 70
    SUB      shift, and go to state 54
    IDENT    shift, and go to state 55
    L_PAREN  shift, and go to state 71

    IDENT     [reduce using rule 65 (SubExist)]
    L_PAREN   [reduce using rule 65 (SubExist)]
    $default  reduce using rule 65 (SubExist)

    RelationExps       go to state 72
    Expression         go to state 73
    MultiplicativeExp  go to state 57
    Term               go to state 58
    SubExist           go to state 59


State 49

   18 Statement: WHILE BoolExp . BEGINLOOP Statements ENDLOOP

    BEGINLOOP  shift, and go to state 74


State 50

   19 Statement: DO BEGINLOOP . Statements ENDLOOP WHILE BoolExp

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 5

    Statements  go to state 75
    Statement   go to state 40
    Var         go to state 41
    Ident       go to state 42


State 51

   20 Statement: READ Vars .

    $default  reduce using rule 20 (Statement)


State 52

   24 Vars: Var .
   25     | Var . COMMA Vars

    COMMA  shift, and go to state 76

    $default  reduce using rule 24 (Vars)


State 53

   21 Statement: WRITE Vars .

    $default  reduce using rule 21 (Statement)


State 54

   66 SubExist: SUB .

    $default  reduce using rule 66 (SubExist)


State 55

   60 Term: IDENT .
   61     | IDENT . L_PAREN ExpressionsComma R_PAREN

    L_PAREN  shift, and go to state 77

    $default  reduce using rule 60 (Term)


State 56

   23 Statement: RETURN Expression .

    $default  reduce using rule 23 (Statement)


State 57

   47 Expression: MultiplicativeExp . Expressions

    SUB  shift, and go to state 78
    ADD  shift, and go to state 79

    $default  reduce using rule 48 (Expressions)

    Expressions  go to state 80


State 58

   51 MultiplicativeExp: Term . MultiplicativeExps

    MULT  shift, and go to state 81
    DIV   shift, and go to state 82
    MOD   shift, and go to state 83

    $default  reduce using rule 52 (MultiplicativeExps)

    MultiplicativeExps  go to state 84


State 59

   56 Term: SubExist . Ident
   57     | SubExist . Ident L_SQUAREBRACKET Expression R_SQUAREBRACKET
   58     | SubExist . NUMBER
   59     | SubExist . L_PAREN Expression R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 85
    L_PAREN  shift, and go to state 86

    Ident  go to state 87


State 60

    5 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY .

    $default  reduce using rule 5 (Function)


State 61

    8 Statements: Statement SEMICOLON .
    9           | Statement SEMICOLON . Statements

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 5

    $default  reduce using rule 8 (Statements)

    Statements  go to state 88
    Statement   go to state 40
    Var         go to state 41
    Ident       go to state 42


State 62

   15 Statement: Var ASSIGN . Expression

    SUB    shift, and go to state 54
    IDENT  shift, and go to state 55

    IDENT     [reduce using rule 65 (SubExist)]
    $default  reduce using rule 65 (SubExist)

    Expression         go to state 89
    MultiplicativeExp  go to state 57
    Term               go to state 58
    SubExist           go to state 59


State 63

   27 Var: Ident L_SQUAREBRACKET . Expression R_SQUAREBRACKET

    SUB    shift, and go to state 54
    IDENT  shift, and go to state 55

    IDENT     [reduce using rule 65 (SubExist)]
    $default  reduce using rule 65 (SubExist)

    Expression         go to state 90
    MultiplicativeExp  go to state 57
    Term               go to state 58
    SubExist           go to state 59


State 64

   16 Statement: IF BoolExp THEN . Statements ENDIF
   17          | IF BoolExp THEN . Statements ELSE Statements ENDIF

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 5

    Statements  go to state 91
    Statement   go to state 40
    Var         go to state 41
    Ident       go to state 42


State 65

   30 BoolExps: OR . BoolExp

    NOT  shift, and go to state 44

    $default  reduce using rule 35 (NotExist)

    BoolExp         go to state 92
    RelationAndExp  go to state 46
    RelationExp     go to state 47
    NotExist        go to state 48


State 66

   28 BoolExp: RelationAndExp BoolExps .

    $default  reduce using rule 28 (BoolExp)


State 67

   33 RelationAndExps: AND . RelationAndExp

    NOT  shift, and go to state 44

    $default  reduce using rule 35 (NotExist)

    RelationAndExp  go to state 93
    RelationExp     go to state 47
    NotExist        go to state 48


State 68

   31 RelationAndExp: RelationExp RelationAndExps .

    $default  reduce using rule 31 (RelationAndExp)


State 69

   38 RelationExps: TRUE .

    $default  reduce using rule 38 (RelationExps)


State 70

   39 RelationExps: FALSE .

    $default  reduce using rule 39 (RelationExps)


State 71

   40 RelationExps: L_PAREN . BoolExp R_PAREN

    NOT  shift, and go to state 44

    $default  reduce using rule 35 (NotExist)

    BoolExp         go to state 94
    RelationAndExp  go to state 46
    RelationExp     go to state 47
    NotExist        go to state 48


State 72

   34 RelationExp: NotExist RelationExps .

    $default  reduce using rule 34 (RelationExp)


State 73

   37 RelationExps: Expression . Comp Expression

    EQ   shift, and go to state 95
    NEQ  shift, and go to state 96
    LT   shift, and go to state 97
    GT   shift, and go to state 98
    LTE  shift, and go to state 99
    GTE  shift, and go to state 100

    Comp  go to state 101


State 74

   18 Statement: WHILE BoolExp BEGINLOOP . Statements ENDLOOP

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 5

    Statements  go to state 102
    Statement   go to state 40
    Var         go to state 41
    Ident       go to state 42


State 75

   19 Statement: DO BEGINLOOP Statements . ENDLOOP WHILE BoolExp

    ENDLOOP  shift, and go to state 103


State 76

   25 Vars: Var COMMA . Vars

    IDENT  shift, and go to state 5

    Vars   go to state 104
    Var    go to state 52
    Ident  go to state 42


State 77

   61 Term: IDENT L_PAREN . ExpressionsComma R_PAREN

    SUB    shift, and go to state 54
    IDENT  shift, and go to state 55

    IDENT     [reduce using rule 65 (SubExist)]
    R_PAREN   reduce using rule 62 (ExpressionsComma)
    $default  reduce using rule 65 (SubExist)

    Expression         go to state 105
    MultiplicativeExp  go to state 57
    Term               go to state 58
    ExpressionsComma   go to state 106
    SubExist           go to state 59


State 78

   50 Expressions: SUB . Expression

    SUB    shift, and go to state 54
    IDENT  shift, and go to state 55

    IDENT     [reduce using rule 65 (SubExist)]
    $default  reduce using rule 65 (SubExist)

    Expression         go to state 107
    MultiplicativeExp  go to state 57
    Term               go to state 58
    SubExist           go to state 59


State 79

   49 Expressions: ADD . Expression

    SUB    shift, and go to state 54
    IDENT  shift, and go to state 55

    IDENT     [reduce using rule 65 (SubExist)]
    $default  reduce using rule 65 (SubExist)

    Expression         go to state 108
    MultiplicativeExp  go to state 57
    Term               go to state 58
    SubExist           go to state 59


State 80

   47 Expression: MultiplicativeExp Expressions .

    $default  reduce using rule 47 (Expression)


State 81

   53 MultiplicativeExps: MULT . MultiplicativeExp

    SUB    shift, and go to state 54
    IDENT  shift, and go to state 55

    IDENT     [reduce using rule 65 (SubExist)]
    $default  reduce using rule 65 (SubExist)

    MultiplicativeExp  go to state 109
    Term               go to state 58
    SubExist           go to state 59


State 82

   54 MultiplicativeExps: DIV . MultiplicativeExp

    SUB    shift, and go to state 54
    IDENT  shift, and go to state 55

    IDENT     [reduce using rule 65 (SubExist)]
    $default  reduce using rule 65 (SubExist)

    MultiplicativeExp  go to state 110
    Term               go to state 58
    SubExist           go to state 59


State 83

   55 MultiplicativeExps: MOD . MultiplicativeExp

    SUB    shift, and go to state 54
    IDENT  shift, and go to state 55

    IDENT     [reduce using rule 65 (SubExist)]
    $default  reduce using rule 65 (SubExist)

    MultiplicativeExp  go to state 111
    Term               go to state 58
    SubExist           go to state 59


State 84

   51 MultiplicativeExp: Term MultiplicativeExps .

    $default  reduce using rule 51 (MultiplicativeExp)


State 85

   58 Term: SubExist NUMBER .

    $default  reduce using rule 58 (Term)


State 86

   59 Term: SubExist L_PAREN . Expression R_PAREN

    SUB    shift, and go to state 54
    IDENT  shift, and go to state 55

    IDENT     [reduce using rule 65 (SubExist)]
    $default  reduce using rule 65 (SubExist)

    Expression         go to state 112
    MultiplicativeExp  go to state 57
    Term               go to state 58
    SubExist           go to state 59


State 87

   56 Term: SubExist Ident .
   57     | SubExist Ident . L_SQUAREBRACKET Expression R_SQUAREBRACKET

    L_SQUAREBRACKET  shift, and go to state 113

    $default  reduce using rule 56 (Term)


State 88

    9 Statements: Statement SEMICOLON Statements .

    $default  reduce using rule 9 (Statements)


State 89

   15 Statement: Var ASSIGN Expression .

    $default  reduce using rule 15 (Statement)


State 90

   27 Var: Ident L_SQUAREBRACKET Expression . R_SQUAREBRACKET

    R_SQUAREBRACKET  shift, and go to state 114


State 91

   16 Statement: IF BoolExp THEN Statements . ENDIF
   17          | IF BoolExp THEN Statements . ELSE Statements ENDIF

    ENDIF  shift, and go to state 115
    ELSE   shift, and go to state 116


State 92

   30 BoolExps: OR BoolExp .

    $default  reduce using rule 30 (BoolExps)


State 93

   33 RelationAndExps: AND RelationAndExp .

    $default  reduce using rule 33 (RelationAndExps)


State 94

   40 RelationExps: L_PAREN BoolExp . R_PAREN

    R_PAREN  shift, and go to state 117


State 95

   41 Comp: EQ .

    $default  reduce using rule 41 (Comp)


State 96

   42 Comp: NEQ .

    $default  reduce using rule 42 (Comp)


State 97

   43 Comp: LT .

    $default  reduce using rule 43 (Comp)


State 98

   44 Comp: GT .

    $default  reduce using rule 44 (Comp)


State 99

   45 Comp: LTE .

    $default  reduce using rule 45 (Comp)


State 100

   46 Comp: GTE .

    $default  reduce using rule 46 (Comp)


State 101

   37 RelationExps: Expression Comp . Expression

    SUB    shift, and go to state 54
    IDENT  shift, and go to state 55

    IDENT     [reduce using rule 65 (SubExist)]
    $default  reduce using rule 65 (SubExist)

    Expression         go to state 118
    MultiplicativeExp  go to state 57
    Term               go to state 58
    SubExist           go to state 59


State 102

   18 Statement: WHILE BoolExp BEGINLOOP Statements . ENDLOOP

    ENDLOOP  shift, and go to state 119


State 103

   19 Statement: DO BEGINLOOP Statements ENDLOOP . WHILE BoolExp

    WHILE  shift, and go to state 120


State 104

   25 Vars: Var COMMA Vars .

    $default  reduce using rule 25 (Vars)


State 105

   63 ExpressionsComma: Expression .
   64                 | Expression . COMMA Expressions

    COMMA  shift, and go to state 121

    $default  reduce using rule 63 (ExpressionsComma)


State 106

   61 Term: IDENT L_PAREN ExpressionsComma . R_PAREN

    R_PAREN  shift, and go to state 122


State 107

   50 Expressions: SUB Expression .

    $default  reduce using rule 50 (Expressions)


State 108

   49 Expressions: ADD Expression .

    $default  reduce using rule 49 (Expressions)


State 109

   53 MultiplicativeExps: MULT MultiplicativeExp .

    $default  reduce using rule 53 (MultiplicativeExps)


State 110

   54 MultiplicativeExps: DIV MultiplicativeExp .

    $default  reduce using rule 54 (MultiplicativeExps)


State 111

   55 MultiplicativeExps: MOD MultiplicativeExp .

    $default  reduce using rule 55 (MultiplicativeExps)


State 112

   59 Term: SubExist L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 123


State 113

   57 Term: SubExist Ident L_SQUAREBRACKET . Expression R_SQUAREBRACKET

    SUB    shift, and go to state 54
    IDENT  shift, and go to state 55

    IDENT     [reduce using rule 65 (SubExist)]
    $default  reduce using rule 65 (SubExist)

    Expression         go to state 124
    MultiplicativeExp  go to state 57
    Term               go to state 58
    SubExist           go to state 59


State 114

   27 Var: Ident L_SQUAREBRACKET Expression R_SQUAREBRACKET .

    $default  reduce using rule 27 (Var)


State 115

   16 Statement: IF BoolExp THEN Statements ENDIF .

    $default  reduce using rule 16 (Statement)


State 116

   17 Statement: IF BoolExp THEN Statements ELSE . Statements ENDIF

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    CONTINUE  shift, and go to state 35
    READ      shift, and go to state 36
    WRITE     shift, and go to state 37
    RETURN    shift, and go to state 38
    IDENT     shift, and go to state 5

    Statements  go to state 125
    Statement   go to state 40
    Var         go to state 41
    Ident       go to state 42


State 117

   40 RelationExps: L_PAREN BoolExp R_PAREN .

    $default  reduce using rule 40 (RelationExps)


State 118

   37 RelationExps: Expression Comp Expression .

    $default  reduce using rule 37 (RelationExps)


State 119

   18 Statement: WHILE BoolExp BEGINLOOP Statements ENDLOOP .

    $default  reduce using rule 18 (Statement)


State 120

   19 Statement: DO BEGINLOOP Statements ENDLOOP WHILE . BoolExp

    NOT  shift, and go to state 44

    $default  reduce using rule 35 (NotExist)

    BoolExp         go to state 126
    RelationAndExp  go to state 46
    RelationExp     go to state 47
    NotExist        go to state 48


State 121

   64 ExpressionsComma: Expression COMMA . Expressions

    SUB  shift, and go to state 78
    ADD  shift, and go to state 79

    $default  reduce using rule 48 (Expressions)

    Expressions  go to state 127


State 122

   61 Term: IDENT L_PAREN ExpressionsComma R_PAREN .

    $default  reduce using rule 61 (Term)


State 123

   59 Term: SubExist L_PAREN Expression R_PAREN .

    $default  reduce using rule 59 (Term)


State 124

   57 Term: SubExist Ident L_SQUAREBRACKET Expression . R_SQUAREBRACKET

    R_SQUAREBRACKET  shift, and go to state 128


State 125

   17 Statement: IF BoolExp THEN Statements ELSE Statements . ENDIF

    ENDIF  shift, and go to state 129


State 126

   19 Statement: DO BEGINLOOP Statements ENDLOOP WHILE BoolExp .

    $default  reduce using rule 19 (Statement)


State 127

   64 ExpressionsComma: Expression COMMA Expressions .

    $default  reduce using rule 64 (ExpressionsComma)


State 128

   57 Term: SubExist Ident L_SQUAREBRACKET Expression R_SQUAREBRACKET .

    $default  reduce using rule 57 (Term)


State 129

   17 Statement: IF BoolExp THEN Statements ELSE Statements ENDIF .

    $default  reduce using rule 17 (Statement)
